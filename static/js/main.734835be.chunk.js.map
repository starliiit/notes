{"version":3,"sources":["components/notes.tsx","components/control.tsx","components/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CSSCenterFlex","flexDirection","display","alignItems","justifyContent","generateNote","array","Math","floor","random","length","generateKey","toString","substr","PlayerBox","children","style","width","height","backgroundColor","fontSize","Note","note","audioPath","join","process","className","fontFamily","color","src","autoPlay","Playing","bpm","useState","setNote","key","setKey","interval","bpmToInterval","refreshNote","useEffect","timerId","setInterval","clearInterval","Paused","Player","playing","ControlPanel","setBpm","setPlaying","label","marginTop","margin","marginRight","onChange","value","parseInt","Number","isNaN","size","defaultValue","onClick","marginLeft","Page","Content","Header","fontStyle","marginBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.734835be.chunk.js","sourcesContent":["import { join } from \"path\"\nimport { CSSProperties, useEffect, useState } from \"react\"\n\n\nexport function CSSCenterFlex(flexDirection: 'column' | 'row' = 'column'): CSSProperties {\n    return {\n        display: 'flex',\n        flexDirection,\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}\n\n\nfunction sample<T>(array: T[]): T {\n    const index = Math.floor(Math.random() * array.length)\n\n    return array[index]\n}\n\nfunction generateNote(): string {\n    const notes = ['C', 'D', 'E', 'F', 'G', 'A', 'B']\n\n    return sample(notes)\n}\n\nfunction generateKey(): string {\n    return Math.random().toString(36).substr(2, 5)\n}\n\nfunction bpmToInterval(bpm: number): number {\n    return Math.floor(60 * 1000 / bpm)\n}\n\nconst ANIMATTION_ENTER = `animate__animated animate__fadeIn`\n\n\nconst PlayerBox: React.FC = ({ children }) => {\n    return (\n        <div style={{\n            width: '40vw',\n            height: '40vh',\n            backgroundColor: 'skyblue',\n            ...CSSCenterFlex(),\n            fontSize: '120px',\n        }}>\n            {children}\n        </div>\n    )\n}\n\n\nconst Note: React.FC<{ note: string }> = ({ note }) => {\n    const audioPath = join(process.env.PUBLIC_URL, `assets/${note}.mp3`)\n\n    return (\n        <PlayerBox>\n            <span className={ANIMATTION_ENTER} style={{\n                fontSize: '120px',\n                fontFamily: 'Georgia',\n                color: '#2860B4',\n            }}>{note}</span>\n            <audio src={audioPath} autoPlay />\n        </PlayerBox>\n    )\n}\n\nconst Playing: React.FC<{ bpm: number }> = ({ bpm }) => {\n    const [note, setNote] = useState<string>(generateNote())\n    const [key, setKey] = useState<string>(generateKey())\n    const interval = bpmToInterval(bpm)\n\n    function refreshNote() {\n        setNote(generateNote())\n        setKey(generateKey())\n    }\n\n    useEffect(() => {\n        const timerId = setInterval(refreshNote, interval)\n        return function cleanup() {\n            clearInterval(timerId)\n        }\n    })\n\n    return (\n        <Note key={key} note={note} />\n    )\n}\n\nconst Paused: React.FC = () => {\n    const msg = `PAUSED`\n\n    return (\n        <PlayerBox>\n            <span style={{\n                fontFamily: 'Lucida Console',\n                color: '#F2569C',\n            }}>{msg}</span>\n        </PlayerBox>\n    )\n}\n\nexport const Player: React.FC<{ bpm: number, playing: Boolean }> = ({ bpm, playing }) => {\n\n    if (playing) {\n        return (\n            <>\n                <Playing bpm={bpm} />\n            </>\n        )\n    }\n    return (\n        <Paused />\n    )\n}","import { Button, InputNumber, message } from \"antd\"\nimport { CSSCenterFlex } from \"./notes\"\n\ninterface ControlPanelProps {\n    setBpm: (bpm: number) => void,\n    playing: Boolean,\n    setPlaying: (playing: Boolean) => void,\n}\n\nconst DEFAULT_BPM = 60\n\nexport const ControlPanel: React.FC<ControlPanelProps> = ({\n    setBpm, playing, setPlaying,\n}) => {\n\n    const onChange = (value: string) => {\n        const bpm = parseInt(value)\n        if (Number.isNaN(bpm)) {\n            setBpm(DEFAULT_BPM)\n        }\n        else {\n            setBpm(bpm)\n        }\n    }\n\n    const onClick = () => {\n        setPlaying(!playing)\n    }\n\n    const label = playing ? `STOP` : `START`\n\n    return (\n        <div style={{\n            ...CSSCenterFlex('row'),\n            marginTop: '16px',\n        }}>\n            <span style={{ margin: '8px' }}>\n                <span style={{ marginRight: '8px', fontSize: '18px' }}>{`bpm`}</span>\n                <InputNumber onChange={onChange} size=\"large\" defaultValue=\"60\" />\n            </span>\n            <Button onClick={onClick} size=\"large\" style={{\n                marginLeft: '12px',\n                width: '90px',\n            }}>{label}</Button>\n        </div>\n    )\n}","import { useState } from \"react\"\nimport { ControlPanel } from \"./control\"\nimport { Player } from \"./notes\"\n\nexport const Page: React.FC = () => {\n    const [bpm, setBpm] = useState<number>(40)\n    const [playing, setPlaying] = useState<Boolean>(false)\n\n    return (\n        <div style={{\n\n        }}>\n            <Player bpm={bpm} playing={playing} />\n            <ControlPanel setBpm={setBpm} playing={playing} setPlaying={setPlaying} />\n        </div>\n    )\n}","import './App.css'\n\nimport \"animate.css\"\nimport 'antd/dist/antd.css'\nimport { CSSCenterFlex } from './components/notes'\nimport { Page } from './components'\n\n\nexport const Content: React.FC = ({ children }) => {\n  return (\n    <div style={{\n      width: '100vw',\n      height: '100vh',\n      ...CSSCenterFlex(),\n    }}>\n      {children}\n    </div>\n  )\n}\n\nconst Header: React.FC = () => {\n  return (\n    <div style={{\n      fontFamily: 'Centaur',\n      fontStyle: 'oblique',\n      fontSize: '48px',\n      color: '#397BBE',\n      marginBottom: '12px',\n    }}>\n      <span>la nota</span>\n    </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Content>\n        <Header />\n        <Page />\n      </Content>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}